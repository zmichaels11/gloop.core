if(!project.hasProperty('artifactoryUser') || !project.hasProperty('artifactoryPassword')) {
    System.err.println 'artifactoryUser or artifactoryPassword is not defined! artifactoryPublish will be disabled.'   
} else {
    artifactory {
        contextUrl = 'http://jartifacts.longlinkislong.com'
        publish {
            repository {
                repoKey = "libs-release-local"
                username = "${artifactoryUser}"
                password = "${artifactoryPassword}"
                maven = true
            }
            defaults {
                publications ('mavenJava')
            }
        }    
    }
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task packageSources(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}
 
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            artifact(packageSources)
            artifact(packageJavadoc)
            
            groupId = "${group}"
            
            // get version number for outputting to artifactory
            if(project.hasProperty('versionOverride')) {
                version = versionOverride
            } else {
                version = "${versionUrl}?name=${project.name}".toURL().text.trim()            
            }
        }    
    }
}

task incrementBuild << {        
    if(project.hasProperty('versionOverride')) {
        System.err.println 'incrementBuild ignored: using version override!'
    } else {
        def version = "${versionUrl}?name=${project.name}&increment=1".toURL().text.trim()
    
        println "incremented build to $version"
    }
}

task version << {
    if(project.hasProperty('versionOverride')) {
        println "$versionOverride (version override)"
    } else {
        println "${versionUrl}?name=${project.name}".toURL().text.trim()    
    }
}